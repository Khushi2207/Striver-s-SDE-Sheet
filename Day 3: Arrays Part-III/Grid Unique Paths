int dfs(int i,int j,int n,int m,vector<vector<int>>&grid,vector<vector<int>>&dp)
    {
        if(i==n-1 && j==m-1)
            return 1;
        
        if(i>=n || j>=m || i<0 || j<0 || grid[i][j]==0 )
            return 0;
        
        if(dp[i][j]!=-1)
            return dp[i][j];
        
        
        grid[i][j]=0;
        
        dp[i][j]=dfs(i,j+1,n,m,grid,dp)+dfs(i+1,j,n,m,grid,dp);
        grid[i][j]=1;
        
        return dp[i][j];
    }
    
    
    int uniquePaths(int n, int m) 
    {
        vector<vector<int>>grid(n+1,vector<int>(m+1,1));
        
        if(n==1 && m==1)
            return 1;
        
        vector<vector<int>>dp(n+1,vector<int>(m+1,-1));
        return dfs(0,0,n,m,grid,dp);
        
    }
