static bool comp(Job a,Job b)
    {
        return a.profit>b.profit;
    }
    
    vector<int> JobScheduling(Job arr[], int n) 
    { 
        sort(arr,arr+n,comp);
        vector<bool>done(101,false);
        
        int dead=arr[0].dead;
        int profit=arr[0].profit;
        done[arr[0].dead]=true;
        for(int i=1;i<n;i++)
        {
            for(int j=arr[i].dead;j>0;j--)
            {
                if(done[j]==false)
                {
                    done[j]=true;
                    profit+=arr[i].profit;
                    break;
                }
            }
            
            // if(done[arr[i].dead]==false)
            // {
            //     profit+=arr[i].profit;
            //     done[arr[i].dead]=true;
            // }
        }
        int c=0;
        for(int i=0;i<101;i++)
        {
            if(done[i]==true)
            c++;
        }
        return vector<int>{c,profit};
    } 
