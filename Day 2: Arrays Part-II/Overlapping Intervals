vector<vector<int>> overlappedInterval(vector<vector<int>>& intv) 
    {
        priority_queue<pair<int,int>,vector<pair<int,int>>,greater<pair<int,int>>>pq;
        for(int i=0;i<intv.size();i++)
        {
            pq.push({intv[i][0],intv[i][1]});
        }
        vector<vector<int>>ans;
        //int a=0,b=0,c=0,d=0;
        while(!pq.empty() && pq.size()>1)
        {
           int a=pq.top().first;
            int b=pq.top().second;
            pq.pop();
            int c=pq.top().first;
            int d=pq.top().second;
            pq.pop();
            if(b>=c)
            pq.push({a,max(b,d)});
            else
            {
                vector<int>v={a,b};
                ans.push_back(v);
                pq.push({c,d});
            }
        }
        
        int q=pq.top().first;
        int l=pq.top().second;
        pq.pop();
        
        if(ans.size()==0)
        {
            ans.push_back({q,l});
            return ans;
        }
        
        int n=ans.size();
        int last2=ans[n-1][1];
        int last1=ans[n-1][0];
        
        if(last2>=q)
        {
            ans.pop_back();
            ans.push_back({last1,max(last2,l)});
        }
        else
        ans.push_back({q,l});
        return ans;
         
    }
