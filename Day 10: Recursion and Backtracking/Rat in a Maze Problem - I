void dfs(int i,int j,int n,vector<vector<int>>&m,string s,vector<string>&v)
    {
        if(i<0 || i>=n  || j<0 || j>=n || m[i][j]==0)
        return;
        
        if(i==n-1 && j==n-1)
        {
            v.push_back(s);
            return;
        }    
        
        m[i][j]=0;
        dfs(i+1,j,n,m,s+'D',v);
        dfs(i-1,j,n,m,s+'U',v);
        dfs(i,j+1,n,m,s+'R',v);
        dfs(i,j-1,n,m,s+'L',v);
        m[i][j]=1;
        
    }
    
    vector<string> findPath(vector<vector<int>> &m, int n) 
    {
        if(m[0][0]==0)
        return vector<string>{"-1"};
        
        string s="";
        vector<string>v;
        dfs(0,0,n,m,s,v);
        return v;
    }
